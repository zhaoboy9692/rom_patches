From 047bb03d4aecd9458848db1f00eb29a30e7c387c Mon Sep 17 00:00:00 2001
From: Yumi Yukimura <me.cafebabe@gmail.com>
Date: Wed, 24 Jul 2024 03:44:22 +0800
Subject: [PATCH 3/3] install: fuse_install: Browse directory using
 std::filesystem

* On ISO9660 FS, Everything has `de->d_type == DT_UNKNOWN`, which
  the previous logic don't handle

Change-Id: I038b71b7f603b2788cef4f17a42ab141d16def83
---
 install/fuse_install.cpp | 26 +++++++++++++++-----------
 1 file changed, 15 insertions(+), 11 deletions(-)

diff --git a/install/fuse_install.cpp b/install/fuse_install.cpp
index e9aa1045..1e5c6e46 100644
--- a/install/fuse_install.cpp
+++ b/install/fuse_install.cpp
@@ -25,6 +25,7 @@
 #include <unistd.h>
 
 #include <algorithm>
+#include <filesystem>
 #include <functional>
 #include <memory>
 #include <string>
@@ -39,6 +40,8 @@
 #include "install/install.h"
 #include "recovery_utils/roots.h"
 
+namespace fs = std::filesystem;
+
 using android::volmgr::VolumeInfo;
 using android::volmgr::VolumeManager;
 
@@ -58,8 +61,7 @@ static void SetSdcardUpdateBootloaderMessage() {
 
 // Returns the selected filename, or an empty string.
 std::string BrowseDirectory(const std::string& path, Device* device, RecoveryUI* ui) {
-  std::unique_ptr<DIR, decltype(&closedir)> d(opendir(path.c_str()), closedir);
-  if (!d) {
+  if (access(path.c_str(), R_OK | X_OK)) {
     PLOG(ERROR) << "error opening " << path;
     return "";
   }
@@ -67,17 +69,19 @@ std::string BrowseDirectory(const std::string& path, Device* device, RecoveryUI*
   std::vector<std::string> dirs;
   std::vector<std::string> entries{ "../" };  // "../" is always the first entry.
 
-  dirent* de;
-  while ((de = readdir(d.get())) != nullptr) {
-    std::string name(de->d_name);
+  for (const auto& entry : fs::directory_iterator(path)) {
+    std::string name = entry.path().filename().string();
+
+    // Skip "." and ".." entries.
+    if (name == "." || name == "..") continue;
 
-    if (de->d_type == DT_DIR) {
-      // Skip "." and ".." entries.
-      if (name == "." || name == "..") continue;
+    if (entry.is_directory()) {
       dirs.push_back(name + "/");
-    } else if (de->d_type == DT_REG && (android::base::EndsWithIgnoreCase(name, ".zip") ||
-                                        android::base::EndsWithIgnoreCase(name, ".map"))) {
-      entries.push_back(name);
+    } else if (entry.is_regular_file()) {
+      if (android::base::EndsWithIgnoreCase(name, ".zip") ||
+          android::base::EndsWithIgnoreCase(name, ".map")) {
+        entries.push_back(name);
+      }
     }
   }
 
-- 
2.39.2

