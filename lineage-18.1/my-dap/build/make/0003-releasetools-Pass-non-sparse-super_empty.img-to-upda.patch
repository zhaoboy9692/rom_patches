From af7856db40b9d78b41eb4a3cdbc0166c790cfe63 Mon Sep 17 00:00:00 2001
From: Yumi Yukimura <me.cafebabe@gmail.com>
Date: Sun, 24 Mar 2024 02:19:46 +0800
Subject: [PATCH 3/4] releasetools: Pass non-sparse super_empty.img to
 update_dynamic_partitions()

* So that updater program can load dynamic partitions metadata from OTA
  when it fails to load from the device

Change-Id: I73687009a2cb243aba1bfec6f357c8ff25f27784
---
 tools/releasetools/add_img_to_target_files.py | 4 ++++
 tools/releasetools/build_super_image.py       | 8 ++++----
 tools/releasetools/common.py                  | 3 ++-
 tools/releasetools/ota_from_target_files.py   | 8 ++++++++
 4 files changed, 18 insertions(+), 5 deletions(-)

diff --git a/tools/releasetools/add_img_to_target_files.py b/tools/releasetools/add_img_to_target_files.py
index f58b6978a8..9a7b3d7ec4 100644
--- a/tools/releasetools/add_img_to_target_files.py
+++ b/tools/releasetools/add_img_to_target_files.py
@@ -677,6 +677,10 @@ def AddSuperEmpty(output_zip):
   build_super_image.BuildSuperImage(OPTIONS.info_dict, img.name)
   img.Write()
 
+  unsparse_img = OutputFile(output_zip, OPTIONS.input_tmp, "IMAGES", "unsparse_super_empty.img")
+  build_super_image.BuildSuperImage(OPTIONS.info_dict, unsparse_img.name, force_non_sparse=True)
+  unsparse_img.Write()
+
 
 def AddSuperSplit(output_zip):
   """Create split super_*.img and store it in output_zip."""
diff --git a/tools/releasetools/build_super_image.py b/tools/releasetools/build_super_image.py
index 6a75dfbc1a..0cd6160d43 100755
--- a/tools/releasetools/build_super_image.py
+++ b/tools/releasetools/build_super_image.py
@@ -69,7 +69,7 @@ def GetArgumentsForImage(partition, group, image=None):
   return cmd
 
 
-def BuildSuperImageFromDict(info_dict, output):
+def BuildSuperImageFromDict(info_dict, output, force_non_sparse=False):
 
   cmd = [info_dict["lpmake"],
          "--metadata-size", "65536",
@@ -133,7 +133,7 @@ def BuildSuperImageFromDict(info_dict, output):
 
       cmd += GetArgumentsForImage(partition + "_b", group + "_b", other_image)
 
-  if info_dict.get("build_non_sparse_super_partition") != "true":
+  if info_dict.get("build_non_sparse_super_partition") != "true" and not force_non_sparse:
     cmd.append("--sparse")
 
   cmd += ["--output", output]
@@ -178,11 +178,11 @@ def BuildSuperImageFromTargetFiles(inp, out):
   return BuildSuperImageFromExtractedTargetFiles(input_tmp, out)
 
 
-def BuildSuperImage(inp, out):
+def BuildSuperImage(inp, out, force_non_sparse=False):
 
   if isinstance(inp, dict):
     logger.info("Building super image from info dict...")
-    return BuildSuperImageFromDict(inp, out)
+    return BuildSuperImageFromDict(inp, out, force_non_sparse=False)
 
   if isinstance(inp, str):
     if os.path.isdir(inp):
diff --git a/tools/releasetools/common.py b/tools/releasetools/common.py
index a65c5d80db..c05be40f7e 100644
--- a/tools/releasetools/common.py
+++ b/tools/releasetools/common.py
@@ -3284,7 +3284,8 @@ class DynamicPartitionsDifference(object):
 
     script.Comment('Update dynamic partition metadata')
     script.AppendExtra('assert(update_dynamic_partitions('
-                       'package_extract_file("dynamic_partitions_op_list")));')
+                      'package_extract_file("dynamic_partitions_op_list"), '
+                      'package_extract_file("unsparse_super_empty.img")));')
 
     if write_verify_script:
       for p, u in self._partition_updates.items():
diff --git a/tools/releasetools/ota_from_target_files.py b/tools/releasetools/ota_from_target_files.py
index 479a8983cd..b1f00e7031 100755
--- a/tools/releasetools/ota_from_target_files.py
+++ b/tools/releasetools/ota_from_target_files.py
@@ -846,6 +846,14 @@ else if get_stage("%(bcb_dev)s") == "3/3" then
   progress_dict["system"] = system_progress
 
   if target_info.get('use_dynamic_partitions') == "true":
+    # Add non-sparse super empty image to OTA package if it exists
+    unsparse_super_empty_image_name = "unsparse_super_empty.img"
+    unsparse_super_empty_image_path = os.path.join(OPTIONS.input_tmp, "IMAGES",
+        unsparse_super_empty_image_name)
+    unsparse_super_empty_image = common.File.FromLocalFile(
+        unsparse_super_empty_image_name, unsparse_super_empty_image_path)
+    common.ZipWriteStr(output_zip, unsparse_super_empty_image_name,
+        unsparse_super_empty_image.data)
     # Use empty source_info_dict to indicate that all partitions / groups must
     # be re-added.
     dynamic_partitions_diff = common.DynamicPartitionsDifference(
-- 
2.39.2

